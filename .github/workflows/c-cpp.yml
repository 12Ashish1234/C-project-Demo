name: C/C++ CI

on:
  push:
    branches: [ "develop" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
    steps:
    - name: Checkout the code
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/test-c-app:${{ github.run_number }}

#     - name: Docker build and push
#       uses: azure/docker-login@v1
#       with:
#           login-server: vehicleregistry.azurecr.io
#           username: ${{ secrets.REGISTRY_USERNAME }}
#           password: ${{ secrets.REGISTRY_PASSWORD }}
#     - run: |
#           docker build . -t vehicleregistry.azurecr.io/vehicle_data_simulator:${{ github.run_number }}
#           docker push vehicleregistry.azurecr.io/vehicle_data_simulator:${{ github.run_number }}
# #          docker buildx create --use --name multi-arch-builder
# #          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
# #          docker buildx ls
# #          docker buildx build --platform linux/arm64 --push -t vehicleregistry.azurecr.io/obdsignalgen:${{ github.run_number }} .
          
